---
title: "Análisis de datos"
author: "Emilia Barrientos, Pablo Campos, Nicolás Godoy, Monserrat Greene y Gonzalo López"
date: "04-10-2021"
output: 
  html_document: 
    toc: yes
    highlight: textmate
    theme: paper
---
#Código de análisis de datos

En base a la operacionalización de Blanco y Julián (2019), el presente código se enfoca en llevar a cabo los análisis pertinentes para la realización de un modelo de clases latentes sobre la precariedad laboral, para las y los trabajadores del sector servicios chileno en el año 2020. Para ello, se utilizan los datos procesados de la **Encuesta Suplementaria de Ingresos (2020)**, derivados de una manipulación preliminar. 

##1. Cargar librerías

En primer lugar, se procede a cargar las librerías que serán utilizadas en los análisis, a partir de la función p_load de la librería pacman.

```{r library, echo=TRUE, warning=FALSE, message=FALSE}
library(pacman)
pacman::p_load(summarytools,
               poLCA,
               xtable)
```

##2. Cargar datos

A continuación, se cargan los datos procesados previamente con la función readRDS, perteneciente al paquete base de R. 
```{r library, echo=TRUE, warning=FALSE, message=FALSE}
base_proc <- readRDS("../input/data/data_proc.rds")
```

##3. Descripción de variables

###3.1. Tabla descriptiva de variables 

Se realizó una tabla descriptiva de las variables  que serán incluidas en el modelo de clases latentes, con la función dfSummary del paquete summarytools. A partir de ella es posible señalar que ... 

```{r library, echo=TRUE, warning=FALSE, message=FALSE}
view(summarytools::dfSummary(base_proc, headings=FALSE))
```
###3.2. Modelo de clases latentes

Se estimará el modelo de clases latentes. Para ello, se genera un objeto **f** que consiste en un vector que indica el modelo. 
```{r library, echo=TRUE, warning=FALSE, message=FALSE}
f<-cbind(contrato,
         contrato_duracion,
         contrato_sub,
         cotiza_prev,
         cotiza_salud,
         cotiza_seguro,
         ingresos,
         lugar_trab,
         cond_vacaciones,
         cond_enfermedad,
         cond_maternidad,
         cond_guarderia,
         horas) ~ 1 # model
```

A continuación, con el paquete poLCA se estiman 11 diferentes modelos de clases latentes, contemplando de dos a doce clases.

```{r library, echo=TRUE, warning=FALSE, message=FALSE}
lc2=poLCA(f, base_proc, nclass=2, graphs = F, nrep = 3, maxiter = 5000)

set.seed(123741) # para mantener el mismo orden de las clases

lc3=poLCA(f, base_proc, nclass=3, graphs = F, maxiter = 5000, nrep = 3, tol=0.000001000)

lc4=poLCA(f, base_proc, nclass=4, graphs = F, maxiter = 5000, nrep = 3, tol=0.000001000)

lc5=poLCA(f, base_proc, nclass=5, graphs = F, maxiter = 5000, nrep = 3, tol=0.000001000)

lc6=poLCA(f, base_proc, nclass=6, graphs = F, maxiter = 5000, nrep = 3, tol=0.000001000)

lc7=poLCA(f, base_proc, nclass=7, graphs = F, maxiter = 5000, nrep = 3, tol=0.000001000)

lc8=poLCA(f, base_proc, nclass=8, graphs = F, maxiter = 5000, nrep = 3, tol=0.000001000)

lc9=poLCA(f, base_proc, nclass=9, graphs = F, maxiter = 5000, nrep = 3, tol=0.000001000)

lc10=poLCA(f, base_proc, nclass=10, graphs = F, maxiter = 5000, nrep = 3, tol=0.000001000)

lc11=poLCA(f, base_proc, nclass=11, graphs = F, maxiter = 5000, nrep = 3, tol=0.000001000)

lc12=poLCA(f, base_proc, nclass=12, graphs = F, maxiter = 5000, nrep = 3, tol=0.000001000)
```
Siguiendo los planteamientos de McCutcheon (2002), en aras de encontrar el modelo más parsimonioso, con la menor cantidad de clases y que tenga un ajuste aceptable, se considerará el chi-cuadrado de Pearson (X2) con su p-valor (P.value), chi-cuadrado de razón de verosimilitud (G2), criterio de información de Akaike (AIC) y criterio de información bayesiano (BIC). En virtud de este objetivo, se estiman las medidas de ajuste de los once modelos. 

Aquí hay que hacer una elección entre opción 1 y opción 2:

**Opción 1 para medidas de ajuste**

```{r library, echo=TRUE, warning=FALSE, message=FALSE}

fit.lc2 <- data.frame(Modell=c("Model lc2"),
BIC                         =lc2$bic,
AIC                        = lc2$aic)

fit.lc3 <- data.frame(Modell=c("Model lc3"),
BIC                         =lc3$bic,
AIC                        = lc3$aic)

fit.lc4 <- data.frame(Modell=c("Model lc4"),
BIC                         =lc4$bic,
AIC                        = lc4$aic)

fit.lc5 <- data.frame(Modell=c("Model lc5"),
BIC                         =lc5$bic,
AIC                        = lc5$aic)

fit.lc6 <- data.frame(Modell=c("Model lc6"),
BIC                         =lc6$bic,
AIC                        = lc6$aic)

fit.lc7 <- data.frame(Modell=c("Model lc7"),
BIC                         =lc7$bic,
AIC                        = lc7$aic)

fit.lc8 <- data.frame(Modell=c("Model lc8"),
BIC                         =lc8$bic,
AIC                        = lc8$aic)

fit.lc9 <- data.frame(Modell=c("Model lc9"),
BIC                         =lc9$bic,
AIC                        = lc9$aic)

fit.lc10 <- data.frame(Modell=c("Model lc10"),
BIC                         =lc10$bic,
AIC                        = lc10$aic)

fit.lc11 <- data.frame(Modell=c("Model lc11"),
BIC                         =lc11$bic,
AIC                        = lc11$aic)

fit.lc12 <- data.frame(Modell=c("Model lc12"),
BIC                         =lc12$bic,
AIC                        = lc12$aic)

comp.fit.lca=rbind(fit.lc2,fit.lc3, fit.lc4,fit.lc5, fit.lc6, fit.lc7, fit.lc8, fit.lc9, fit.lc10, fit.lc11, fit.lc12)

print(xtable(comp.fit.lca), type="html")

data.frame(comp.fit.lca)

```
**Opción 2 para medidas de ajuste**
Se calcula el chi-cuadrado de Pearson (X2) con su p-valor (P.value) para cada modelo. No funcionó u.u
```{r}

p2<-1-pchisq(lc2$Chisq, lc2$resid.df)
p3<-1-pchisq(lc3$Chisq, lc3$resid.df)
p4<-1-pchisq(lc4$Chisq, lc4$resid.df)
p5<-1-pchisq(lc5$Chisq, lc5$resid.df)
p6<-1-pchisq(lc6$Chisq, lc6$resid.df)
p7<-1-pchisq(lc7$Chisq, lc7$resid.df)
p8<-1-pchisq(lc8$Chisq, lc8$resid.df)
p9<-1-pchisq(lc9$Chisq, lc9$resid.df)
p10<-1-pchisq(lc10$Chisq, lc10$resid.df)
p11<-1-pchisq(lc11$Chisq, lc11$resid.df)
p12<-1-pchisq(lc12$Chisq, lc12$resid.df)

```

La Tabla x resume las medidas de ajuste de cada modelo. Se observa que... Por ende, se selecciona el modelo de x clases, dado que...

```{r}

ajuste <- data.frame (
  c("lc2", "lc3", "lc4", "lc5", "lc6","lc7", "lc8", "lc9", "lc10", "lc11", "lc12"),
  c(lc2$llik, lc3$llik, lc4$llik, lc5$llik, lc6$llik, lc7$llik, lc8$llik, lc9$llik, lc10$llik, lc11$llik, lc12$llik),
  c(lc2$Chisq, lc3$Chisq, lc4$Chisq, lc5$Chisq, lc6$Chisq, lc7$Chisq, lc8$Chisq,lc9$Chisq, lc10$Chisq, lc11$Chisq, lc12$Chisq),
  c(lc2$Gsq, lc3$Gsq, lc4$Gsq, lc5$Gsq, lc6$Gsq, lc7$Gsq, lc8$Gsq, lc9$Gsq, lc10$Gsq, lc11$Gsq, lc12$Gsq),
  c(lc2$npar, lc3$npar, lc4$npar, lc5$npar, lc6$npar, lc7$npar, lc8$npar, lc9$npar, lc10$npar, lc11$npar,lc12$npar),
  c(lc2$aic, lc3$aic, lc4$aic, lc5$aic, lc6$aic, lc7$aic, lc8$aic, lc9$aic, lc10$aic, lc11$aic, lc12$aic),
  c(lc2$bic, lc3$bic, lc4$bic, lc5$bic, lc6$bic, lc7$bic, lc8$bic, lc9$bic, lc10$bic, lc11$bic, lc12$bic),
  c(p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12))

colnames(ajuste)<-c("Modelo", "Loglike", "X2", "G2", "DF", "AIC", "BIC", "P-value")

View(ajuste)
```

