library(nnet)
knitr::opts_chunk$set(echo = FALSE, # oculta código
warning=F, message=F,  # oculta warnings y mensajes
cache=TRUE # guarda en la memoria resultados, más velocidad
)
library(devtools)
devtools::install_github("crsh/citr", force = TRUE)
pacman::p_load(summarytools, #para estadísticos descriptivos
poLCA, #para estimar los modelos LCA
sjPlot, #para realizar las tablas
dplyr, #para manipular datos
tidyr, #para cambiar estructura de los datos
reshape2, #para crear tabla de modelos LCA
ggplot2) #para crear graficos
options(scipen = 999)
base_proc <- readRDS("../input/data/data_proc.rds")
print(summarytools::dfSummary(base_proc, headings=FALSE, plain.ascii = FALSE), method = 'render')
f<-cbind(contrato,
contrato_duracion,
contrato_sub,
cotiza_prev,
cotiza_salud,
cotiza_seguro,
ingresos,
lugar_trab,
cond_vacaciones,
cond_enfermedad,
cond_maternidad,
cond_guarderia,
horas) ~ 1 # model
lc1=poLCA(f, base_proc, nclass=1, graphs = F, nrep = 3, maxiter = 5000)
set.seed(123741) # para mantener el mismo orden de las clases
lc2=poLCA(f, base_proc, nclass=2, graphs = F, nrep = 3, maxiter = 5000)
lc3=poLCA(f, base_proc, nclass=3, graphs = F, maxiter = 5000, nrep = 3, tol=0.000001000)
lc4=poLCA(f, base_proc, nclass=4, graphs = F, maxiter = 5000, nrep = 3, tol=0.000001000)
lc5=poLCA(f, base_proc, nclass=5, graphs = F, maxiter = 5000, nrep = 3, tol=0.000001000)
lc6=poLCA(f, base_proc, nclass=6, graphs = F, maxiter = 5000, nrep = 3, tol=0.000001000)
lc7=poLCA(f, base_proc, nclass=7, graphs = F, maxiter = 5000, nrep = 3, tol=0.000001000)
lc8=poLCA(f, base_proc, nclass=8, graphs = F, maxiter = 5000, nrep = 3, tol=0.000001000)
lc9=poLCA(f, base_proc, nclass=9, graphs = F, maxiter = 5000, nrep = 3, tol=0.000001000)
lc10=poLCA(f, base_proc, nclass=10, graphs = F, maxiter = 5000, nrep = 3, tol=0.000001000)
library(beepr)
beep(4)
lc11=poLCA(f, base_proc, nclass=11, graphs = F, maxiter = 5000, nrep = 3, tol=0.000001000)
lc12=poLCA(f, base_proc, nclass=12, graphs = F, maxiter = 5000, nrep = 3, tol=0.000001000)
##  Estadísticos de ajuste
AIC.1 <-as.numeric(lc1$aic)
AIC.2 <-as.numeric(lc2$aic)
AIC.3 <-as.numeric(lc3$aic)
AIC.4 <-as.numeric(lc4$aic)
AIC.5 <-as.numeric(lc5$aic)
AIC.6 <-as.numeric(lc6$aic)
AIC.7 <-as.numeric(lc7$aic)
AIC.8 <-as.numeric(lc8$aic)
AIC.9 <-as.numeric(lc9$aic)
AIC.10 <-as.numeric(lc10$aic)
AIC.11 <-as.numeric(lc11$aic)
AIC.12 <-as.numeric(lc12$aic)
BIC.1 <-as.numeric(lc1$bic)
BIC.2 <-as.numeric(lc2$bic)
BIC.3 <-as.numeric(lc3$bic)
BIC.4 <-as.numeric(lc4$bic)
BIC.5 <-as.numeric(lc5$bic)
BIC.6 <-as.numeric(lc6$bic)
BIC.7 <-as.numeric(lc7$bic)
BIC.8 <-as.numeric(lc8$bic)
BIC.9 <-as.numeric(lc9$bic)
BIC.10 <-as.numeric(lc10$bic)
BIC.11 <-as.numeric(lc11$bic)
BIC.12 <-as.numeric(lc12$bic)
llik.1 <-as.numeric(lc1$llik)
llik.2 <-as.numeric(lc2$llik)
llik.3 <-as.numeric(lc3$llik)
llik.4 <-as.numeric(lc4$llik)
llik.5 <-as.numeric(lc5$llik)
llik.6 <-as.numeric(lc6$llik)
llik.7 <-as.numeric(lc7$llik)
llik.8 <-as.numeric(lc8$llik)
llik.9 <-as.numeric(lc9$llik)
llik.10 <-as.numeric(lc10$llik)
llik.11 <-as.numeric(lc11$llik)
llik.12 <-as.numeric(lc12$llik)
chisq.1 <- as.numeric(lc2$Chisq)
chisq.2 <- as.numeric(lc2$Chisq)
chisq.3 <- as.numeric(lc3$Chisq)
chisq.4 <- as.numeric(lc4$Chisq)
chisq.5 <- as.numeric(lc5$Chisq)
chisq.6 <- as.numeric(lc6$Chisq)
chisq.7 <- as.numeric(lc7$Chisq)
chisq.8 <- as.numeric(lc8$Chisq)
chisq.9 <- as.numeric(lc9$Chisq)
chisq.10 <- as.numeric(lc10$Chisq)
chisq.11 <- as.numeric(lc11$Chisq)
chisq.12 <- as.numeric(lc12$Chisq)
G.1 <- as.numeric(lc1$Gsq)
G.2 <- as.numeric(lc2$Gsq)
G.3 <- as.numeric(lc3$Gsq)
G.4 <- as.numeric(lc4$Gsq)
G.5 <- as.numeric(lc5$Gsq)
G.6 <- as.numeric(lc6$Gsq)
G.7 <- as.numeric(lc7$Gsq)
G.8 <- as.numeric(lc8$Gsq)
G.9 <- as.numeric(lc9$Gsq)
G.10 <- as.numeric(lc10$Gsq)
G.11 <- as.numeric(lc11$Gsq)
G.12 <- as.numeric(lc12$Gsq)
n.obs1 <- as.numeric(lc1$Nobs)
n.obs2 <- as.numeric(lc2$Nobs)
n.obs3 <- as.numeric(lc3$Nobs)
n.obs4 <- as.numeric(lc4$Nobs)
n.obs5 <- as.numeric(lc5$Nobs)
n.obs6 <- as.numeric(lc6$Nobs)
n.obs7 <- as.numeric(lc7$Nobs)
n.obs8 <- as.numeric(lc8$Nobs)
n.obs9 <- as.numeric(lc9$Nobs)
n.obs10 <- as.numeric(lc10$Nobs)
n.obs11 <- as.numeric(lc11$Nobs)
n.obs12 <- as.numeric(lc12$Nobs)
#Creación de Vectores para TABLA DE COMPARACIÓN
AIC <- c(AIC.1, AIC.2,AIC.3,AIC.4,AIC.5, AIC.6, AIC.7, AIC.8, AIC.9, AIC.10, AIC.11, AIC.12)
BIC <- c(BIC.1, BIC.2,BIC.3,BIC.4,BIC.5, BIC.6, BIC.7, BIC.8, BIC.9, BIC.10, BIC.11, BIC.12)
llik <- c(llik.1, llik.2,llik.3,llik.4,llik.5, llik.6, llik.7, llik.8, llik.9, llik.10, llik.11, llik.12)
chi.cuadrado <- c(chisq.1, chisq.2,chisq.3,chisq.4,chisq.5, chisq.6, chisq.7, chisq.8, chisq.9, chisq.10, chisq.11, chisq.12)
G2 <- c(G.1, G.2,G.3,G.4,G.5, G.6, G.7, G.8, G.9, G.10, G.11, G.12)
N <- c(n.obs1, n.obs2,n.obs3,n.obs4,n.obs5, n.obs6, n.obs7, n.obs8, n.obs9, n.obs10, n.obs11, n.obs12)
Modelos <- c("1 clase","2 clases", "3 clases", "4 clases", "5 clases", "6 clases", "7 clases", "8 clases", "9 clases", "10 clases", "11 clases", "12 clases")
#CREACIÓN TABLA ESTADÍSTICOS DE AJUSTE MODELOS TODAS LAS VARIABLES
fit.indices <- data.frame(Modelos,AIC,BIC,llik,chi.cuadrado,G2,N)
sjPlot::tab_df(fit.indices,
title = "Tabla 2.
Medidas de ajuste para modelos de clases latentes",
footnote = "Elaboracion propia en base a ESI (2020)",
col.header = c("Modelos", "AIC", "BIC", "Log-likelihood", "Chi^2", "G2", "N"),
show.footnote = T)
lcmodel <- reshape2::melt(lc4$probs, level=2)
modelo <- lcmodel %>%
pivot_wider(names_from = "Var1",
values_from = "value") %>%
select(Variable = L2, Categoria = Var2, clase1 = "class 1: ", clase2 = "class 2: ", clase3 = "class 3: ", clase4 = "class 4: ") %>%
mutate(Variable = car::recode(.$Variable, recodes = c("'contrato' = 'Contrato';
'contrato_duracion' = 'Duracion de contrato';
'contrato_sub' = 'Subcontrato';
'horas' = 'Horas';
'ingresos' = 'Quintil de ingresos';
'lugar_trab' = 'Lugar de trabajo';
'cotiza_prev' = 'Cotizacion previsional';
'cotiza_salud' = 'Cotizacion de salud';
'cotiza_seguro' = 'Cotizacion seguro de desempleo';
'cond_enfermedad' = 'Dias pagos por enfermedad';
'cond_guarderia' = 'Derecho a guarderia';
'cond_maternidad' = 'Dias pagos por maternidad';
'cond_vacaciones' = 'Vacaciones pagadas'"), as.factor = T),
Categoria = case_when(Variable == 'Contrato' & Categoria == 'Pr(1)' ~ 'No',
Variable == 'Contrato' & Categoria == 'Pr(2)' ~ 'Si',
Variable == 'Horas' & Categoria == 'Pr(1)' ~ 'Entre 31 y 45 horas semanales',
Variable == 'Horas' & Categoria == 'Pr(2)' ~ 'Igual o menor a 30 horas semanales',
Variable == 'Horas' & Categoria == 'Pr(3)' ~ 'Mayor a 45 horas semanales',
Variable == 'Lugar de trabajo' & Categoria =='Pr(1)' ~ 'En instalaciones u oficinas propias o arrendadas, en hogar propio o anexos',
Variable == 'Lugar de trabajo' & Categoria == 'Pr(2)' ~ 'En instalaciones, oficina o casa del cliente o empleador',
Variable == 'Lugar de trabajo' & Categoria == 'Pr(3)' ~ 'En la calle o via publica, u otro',
Variable == 'Lugar de trabajo' & Categoria == 'Pr(4)' ~ 'En obras de construccion, mineras, predio agricola o similares',
Variable == 'Quintil de ingresos' & Categoria == 'Pr(1)' ~ '$0 a $291.974',
Variable == 'Quintil de ingresos' & Categoria == 'Pr(2)' ~ '$291.975 a $380.500',
Variable == 'Quintil de ingresos' & Categoria == 'Pr(3)' ~ '$380.501 a $500.000',
Variable == 'Quintil de ingresos' & Categoria == 'Pr(4)' ~ '$500.001 a $779.787',
Variable == 'Subcontrato' & Categoria == 'Pr(1)' ~ 'Con un contratista o subcontratista de bienes y servicios',
Variable == 'Subcontrato' & Categoria == 'Pr(2)' ~ 'Con un enganchador (contratista agricola)',
Variable == 'Subcontrato' & Categoria == 'Pr(3)' ~ 'Con una empresa de servicios temporales o suministradora de trabajadores',
Variable == 'Cotizacion de salud' & Categoria == 'Pr(1)' ~ 'No',
Variable == 'Cotizacion de salud' & Categoria == 'Pr(2)' ~ 'Si',
Variable == 'Cotizacion previsional' & Categoria == 'Pr(1)' ~ 'No',
Variable == 'Cotizacion previsional' & Categoria == 'Pr(2)' ~ 'Si',
Variable == 'Cotizacion seguro de desempleo' & Categoria == 'Pr(1)' ~ 'No',
Variable == 'Cotizacion seguro de desempleo' & Categoria == 'Pr(2)' ~ 'Si',
Variable == 'Derecho a guarderia'& Categoria == 'Pr(1)' ~'No',
Variable == 'Derecho a guarderia'& Categoria == 'Pr(2)' ~ 'Si',
Variable == 'Dias pagos por enfermedad' & Categoria == 'Pr(1)' ~ 'No',
Variable == 'Dias pagos por enfermedad' & Categoria == 'Pr(2)' ~ 'Si',
Variable == 'Vacaciones pagadas'& Categoria == 'Pr(1)' ~ 'No',
Variable == 'Vacaciones pagadas'& Categoria == 'Pr(2)' ~ 'Si',
Variable == 'Dias pagos por maternidad'& Categoria == 'Pr(1)' ~ 'No',
Variable == 'Dias pagos por maternidad'& Categoria == 'Pr(2)' ~ 'Si',
Variable == 'Duracion de contrato'& Categoria == 'Pr(1)' ~ 'Definido',
Variable == 'Duracion de contrato'& Categoria == 'Pr(2)' ~ 'Indefinido',
TRUE ~ NA_character_),
clase1 = (round(.$clase1, digits = 3))*100,
clase2 = (round(.$clase2, digits = 3))*100,
clase3 = (round(.$clase3, digits = 3))*100,
clase4 = (round(.$clase4, digits = 3))*100)
sjPlot::tab_df(modelo,
title = 'Tabla 3.
Modelo de clases latentes de precariedad laboral',
footnote = 'Elaboracion propia en base a ESI (2020)',
show.footnote = T)
lca4_probs=as.data.frame(lc4$probs)
datlca_tot_par=lca4_probs[c(1,3,5,8,10,12,14,20,22,24,26,28,31)] #dejar la categoria mas precaria
datlca_tot_par$class=c(1:4) #añadir número de clase
datlca_tot_parl=melt(datlca_tot_par, id=c("class") )
# Relabel factors
datlca_tot_parl$variable=factor(datlca_tot_parl$variable, labels=c("Ausencia de contrato", "Duración de contrato", "Acuerdo de trabajo", "Cotización en previsión", "Cotización en salud", "Cotización en seguro de desempleo","Quintiles de ingreso", "Lugar de trabajo", "Derecho a vacaciones", "Derecho a días pago por enfermedad", "Derecho a días pagos por pa/maternidad", "Derecho a guardería infantil", "Jornada igual o menor a 30 horas semanales"))
#lc4$P # class size
datlca_tot_parl$class=factor(datlca_tot_parl$class,labels=c("Clase 1 (17.9%)", "Clase 2 (6.9%)", "Clase 3 (44.6%)", "Clase 4 (30.5%)"))
lca4_graph <-ggplot(data = datlca_tot_parl, aes(x=variable, y=value, group=class, shape=class)) +
geom_line(aes(linetype=class)) + geom_point(size = 2) +
labs(title = "Grafico 1.",
subtitle = "Clases latentes de precariedad laboral en sector servicios",
caption = "Elaboracion propia en base a ESI (2020)") +
xlab("Indicadores precariedad") +
ylab("Probabilidades condicionales") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
lca4_graph
#Asginar la clase de precariedad a cada sujeto
base_proc <- cbind(base_proc, lc4$predclass)
#Renombrar la variable de clase de precariedad
base_proc <- base_proc %>% rename(Clase=`lc4$predclass`)
#Creación de tabla cruzada para variable sexo
sjt.xtab(base_proc$Clase, base_proc$sexo,
title = "Tabla 4.
Proporciones por clase de precariedad y sexo",
show.row.prc = T,
show.col.prc = T)
#Creación de tabla cruzada para variable educación
sjt.xtab(base_proc$Clase, base_proc$educacion,
title = "Tabla 5.
Proporciones por clase de precariedad y nivel educacional",
show.row.prc = TRUE)
#Creación de tabla cruzada para variable edad
sjt.xtab(base_proc$Clase, base_proc$edad,
title = "Tabla 6.
Proporciones por clase de precariedad y edad",
show.row.prc = T,
encoding = 'UTF-8')
View(base_proc)
base_proc$Clase <- as.factor(base_proc$Clase)
prueba <- multinom(Clase ~ edad + educacion + sexo)
prueba <- multinom(Clase ~ edad + educacion + sexo, base_proc)
library(texreg)
or_prueba <- texreg::extract(prueba)
or_prueba@coef <- exp(or_prueba@coef)
screenreg(or_prueba)
screenreg(prueba)
screenreg(or_prueba)
